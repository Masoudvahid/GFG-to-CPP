// C++ program to implement Bitwise Binary Search
 
#include<iostream>
 
using namespace std;
 
int binary_search(int *arr,int size,int target)
{
    int index, power;
   
    //Compute the first power of 2 that is >= size
    for (power = 1; power < size; power <<= 1);
 
      //loop while(power > 0)
      //and divide power by two each iteration
    for (index = 0; power; power >>= 1){
       
          //if the next condition is true
          //it means that the power value can contribute to the "sum"(a closer index where target might be)
        if (index + power < size && arr[index + power] <= target)
           index += power;
 
       
    }
   
    //if the element at position [index] == target,
      //the target value is present in the array
    if(arr[index] == target)
        return index;
   
      //else the value is not present in the array
    return -1;
}
 
int main(){
    int arr[5] = {1, 3, 5, 7, 8};
    int size = 5;
    int x = 3;
    int answer = binary_search(arr, size, x);
    if(answer == -1)
        cout << "Element not found";
    else
        cout << "Element found at position " << answer;
}
  // This code is contributed
  // by Gatea David
